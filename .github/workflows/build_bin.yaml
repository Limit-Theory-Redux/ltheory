name: Build Binaries

on:
  pull_request:
  push:
    branches:
      - main

env:
  BUILD_TYPE: RelWithDebInfo

permissions:
  contents: write

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - name: Create Build Environment
        run: python configure.py
      - name: Build
        run: python configure.py build
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ltheory-bin-win32
          path: ${{github.workspace}}/bin/*

  build-ubuntu:
    name: Build Ubuntu 20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get install -y libluajit-5.1-dev libglew-dev libsdl2-dev liblz4-dev libfreetype-dev libbullet-dev
      - name: Create Build Environment
        run: python configure.py
      - name: Build
        run: python configure.py build
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ltheory-bin-ubuntu2004
          path: ${{github.workspace}}/bin/*

  release:
    name: Create release and upload artifacts
    needs:
      - build-windows
      - build-ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Zip artifacts
        run: for dir in $(ls); do echo zip $dir.zip ./$dir/* -r; done
      - name: Get latest release
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/Limit-Theory-Redux/ltheory/releases/tags/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Delete latest release
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/Limit-Theory-Redux/ltheory/releases/{release_id}
          release_id: ${{ fromJson(steps.get_latest_release.outputs.data).id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update latest tag
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/Limit-Theory-Redux/ltheory/git/refs/tags/latest
          sha: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          prerelease: true
          files: ./*.zip
